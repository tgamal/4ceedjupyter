version: "3.5"

services:
  # clowder application
  clowder:
    image: t2c2/4ceedcurator:18.10.29
    ports:
      - 9000:9000
    networks:
      - clowder
    volumes:
      - clowder-custom:/home/clowder/custom
      - clowder-data:/home/clowder/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    deploy:
      mode: replicated
      restart_policy:
        condition: any
    depends_on:
      - mongo
      - rabbitmq
      - elasticsearch

  # mongo database used to store metadata/data
  mongo:
    image: mongo:3.4
    networks:
      - clowder
    ports:
      - 27017
    volumes:
      - mongo:/data/db
    restart: unless-stopped
    deploy:
      mode: replicated
      restart_policy:
        condition: any

  # rabbitmq to connect to extractors
  rabbitmq:
    image: rabbitmq:management-alpine
    networks:
      - clowder
    ports:
      - 5672
      - 15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    restart: unless-stopped
    deploy:
      mode: replicated
      restart_policy:
        condition: any

  # elasticsearch to allow indexing
  elasticsearch:
    image: elasticsearch:2
    command: elasticsearch -Des.cluster.name="clowder"
    networks:
      - clowder
    ports:
      - 9200
      - 9300
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    restart: unless-stopped
    deploy:
      mode: replicated
      restart_policy:
        condition: any

  # extractors
  dm3:
    image: tcnichol/dm3-extractor:18.10.21
    networks:
      - clowder
    depends_on:
      - rabbitmq
      - clowder
    restart: unless-stopped
    deploy:
      mode: replicated
      restart_policy:
        condition: any

  sem-extractor:
    image: tcnichol/sem-extractor:18.10.23
    networks:
      - clowder
    depends_on:
      - rabbitmq
      - clowder
    restart: unless-stopped
    deploy:
      mode: replicated
      restart_policy:
        condition: any

  audiopreview:
    image: clowder/extractors-audio-preview
    networks:
      - clowder
    depends_on:
      - rabbitmq
      - clowder
    restart: unless-stopped
    deploy:
      mode: replicated
      restart_policy:
        condition: any

  imagepreview:
    image: tcnichol/image-preview:2018.10.21
    networks:
      - clowder
    depends_on:
      - rabbitmq
      - clowder
    restart: unless-stopped
    deploy:
      mode: replicated
      restart_policy:
        condition: any

  rbs-nra:
    image: tcnichol/rbs-nra:2018.10.21
    networks:
      - clowder
    depends_on:
      - rabbitmq
      - clowder
    restart: unless-stopped
    deploy:
      mode: replicated
      restart_policy:
        condition: any

  rbs-spe:
    image: tcnichol/rbs-spe:2018.10.21
    networks:
      - clowder
    depends_on:
      - rabbitmq
      - clowder
    restart: unless-stopped
    deploy:
      mode: replicated
      restart_policy:
        condition: any

  rbs-xnra:
    image: tcnichol/rbs-xnra:2018.10.21
    networks:
      - clowder
    depends_on:
      - rabbitmq
      - clowder
    restart: unless-stopped
    deploy:
      mode: replicated
      restart_policy:
        condition: any

  xrdml:
    image: tcnichol/xrdml:2018.10.21
    networks:
      - clowder
    depends_on:
      - rabbitmq
      - clowder
    restart: unless-stopped
    deploy:
      mode: replicated
      restart_policy:
        condition: any


  # Jupyter notebook
  jupyter:
    image: tgamal/4ceed-jupyter-container:latest
    ports:
      - 8888:8888
    networks:
      - clowder
    restart: "no"
    deploy:
      mode: replicated
      restart_policy:
        condition: any
    entrypoint: /bin/true
networks:
    clowder:

volumes:
  clowder-data:
  clowder-custom:
  mongo:
  rabbitmq:
  elasticsearch:
